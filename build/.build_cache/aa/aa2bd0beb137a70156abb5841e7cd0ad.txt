{
    errdata = "In file included from src/dagman/task_queue.c:1:\
In file included from include/dagman/task.h:7:\
\27[1minclude/dagman/datum.h:48:59: \27[0m\27[0;1;35mwarning: \27[0m\27[1mdeclaration of 'struct dm_task' will not be visible outside of this function [-Wvisibility]\27[0m\
void dm_datum_add_pending(struct dm_datum * datum, struct dm_task * task);\
\27[0;1;32m                                                          ^\
\27[0m\27[1msrc/dagman/task_queue.c:5:111: \27[0m\27[0;1;35mwarning: \27[0m\27[1mdata argument not used by format string [-Wformat-extra-args]\27[0m\
 do { fprintf(stdout, \"\\x1B[1;34m\" \"info:\" \"\\x1B[0m\" \" \"); fprintf(stdout, \"dagman.sched\" \": \" \"insert task\", task->uid); fprintf(stdout, \"\\n\"); fflush(stdout); } while(0);\
\27[0;1;32m                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  ^\
\27[0m\27[1msrc/dagman/task_queue.c:8:32: \27[0m\27[0;1;35mwarning: \27[0m\27[1mincompatible pointer types passing 'struct absys_dm_param_vec *' to parameter of type 'struct absys_dm_datum_vec *' [-Wincompatible-pointer-types]\27[0m\
 if (!absys_dm_datum_vec_empty(&task->params)) {\
\27[0;1;32m                               ^~~~~~~~~~~~~\
\27[0m\27[1minclude/dagman/datum.h:44:337: \27[0m\27[0;1;30mnote: \27[0mpassing argument to parameter 'vec' here\27[0m\
struct absys_dm_datum_vec { struct dm_datum* data; int size; int capacity;};struct absys_dm_datum_vec_it { int cursor; struct absys_dm_datum_vec * vec;}; void absys_dm_datum_vec_init(struct absys_dm_datum_vec* vec); void absys_dm_datum_vec_exit(struct absys_dm_datum_vec* vec); _Bool absys_dm_datum_vec_empty(struct absys_dm_datum_vec* vec); int absys_dm_datum_vec_size(struct absys_dm_datum_vec* vec); void absys_dm_datum_vec_reserve(struct absys_dm_datum_vec* vec, int newcap); void absys_dm_datum_vec_resize(struct absys_dm_datum_vec* vec, int newsize); void absys_dm_datum_vec_push(struct absys_dm_datum_vec* vec, const struct dm_datum elem); void absys_dm_datum_vec_set(struct absys_dm_datum_vec* vec, int pos, const struct dm_datum elem); struct dm_datum absys_dm_datum_vec_get(struct absys_dm_datum_vec* vec, int idx); struct dm_datum *absys_dm_datum_vec_get_ref(struct absys_dm_datum_vec* vec, int idx); struct dm_datum absys_dm_datum_vec_first(struct absys_dm_datum_vec* vec); struct dm_datum absys_dm_datum_vec_last(struct absys_dm_datum_vec* vec); struct dm_datum * absys_dm_datum_vec_last_ref(struct absys_dm_datum_vec* vec); struct dm_datum absys_dm_datum_vec_pop(struct absys_dm_datum_vec* vec); void absys_dm_datum_vec_fill(struct absys_dm_datum_vec* vec, const struct dm_datum elem); void absys_dm_datum_vec_it_init(struct absys_dm_datum_vec_it* iter, struct absys_dm_datum_vec* vec); void absys_dm_datum_vec_it_exit(struct absys_dm_datum_vec_it* iter); void absys_dm_datum_vec_it_get(struct absys_dm_datum_vec_it* iter, struct dm_datum* value); _Bool absys_dm_datum_vec_it_next(struct absys_dm_datum_vec_it* iter);;\
\27[0;1;32m                                                                                                                                                                                                                                                                                                                                                ^\
\27[0m\27[1msrc/dagman/task_queue.c:15:130: \27[0m\27[0;1;35mwarning: \27[0m\27[1mformat specifies type 'int' but the argument has type 'int64_t' (aka 'long') [-Wformat]\27[0m\
    do { fprintf(stdout, \"\\x1B[1;34m\" \"info:\" \"\\x1B[0m\" \" \"); fprintf(stdout, \"dagman.sched\" \": \" \"task %d: datum is available\", task->uid); fprintf(stdout, \"\\n\"); fflush(stdout); } while(0);\
\27[0;1;32m                                                                                                        ~~                       ^~~~~~~~~\
\27[0m\27[0;32m                                                                                                        %ld\
\27[0m\27[1msrc/dagman/task_queue.c:21:134: \27[0m\27[0;1;35mwarning: \27[0m\27[1mformat specifies type 'int' but the argument has type 'int64_t' (aka 'long') [-Wformat]\27[0m\
    do { fprintf(stdout, \"\\x1B[1;34m\" \"info:\" \"\\x1B[0m\" \" \"); fprintf(stdout, \"dagman.sched\" \": \" \"task %d: datum is not available\", task->uid); fprintf(stdout, \"\\n\"); fflush(stdout); } while(0);\
\27[0;1;32m                                                                                                        ~~                           ^~~~~~~~~\
\27[0m\27[0;32m                                                                                                        %ld\
\27[0m\27[1msrc/dagman/task_queue.c:23:40: \27[0m\27[0;1;35mwarning: \27[0m\27[1mincompatible pointer types passing 'struct dm_task *' to parameter of type 'struct dm_task *' [-Wincompatible-pointer-types]\27[0m\
    dm_datum_add_pending(param->datum, task);\
\27[0;1;32m                                       ^~~~\
\27[0m\27[1minclude/dagman/datum.h:48:69: \27[0m\27[0;1;30mnote: \27[0mpassing argument to parameter 'task' here\27[0m\
void dm_datum_add_pending(struct dm_datum * datum, struct dm_task * task);\
\27[0;1;32m                                                                    ^\
\27[0m\27[1msrc/dagman/task_queue.c:33:121: \27[0m\27[0;1;35mwarning: \27[0m\27[1mformat specifies type 'int' but the argument has type 'int64_t' (aka 'long') [-Wformat]\27[0m\
 do { fprintf(stdout, \"\\x1B[1;34m\" \"info:\" \"\\x1B[0m\" \" \"); fprintf(stdout, \"dagman.sched\" \": \" \"task %d: ready to run\", task->uid); fprintf(stdout, \"\\n\"); fflush(stdout); } while(0);\
\27[0;1;32m                                                                                                     ~~                 ^~~~~~~~~\
\27[0m\27[0;32m                                                                                                     %ld\
\27[0m7 warnings generated.\
"
}